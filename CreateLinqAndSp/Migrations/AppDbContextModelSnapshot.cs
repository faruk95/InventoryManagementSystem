// <auto-generated />
using System;
using CreateLinqAndSp.DbContexts;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace CreateLinqAndSp.Migrations
{
    [DbContext(typeof(AppDbContext))]
    partial class AppDbContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "6.0.12")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder, 1L, 1);

            modelBuilder.Entity("CreateLinqAndSp.Models.TblItem", b =>
                {
                    b.Property<int>("IntItemId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("intItemId");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("IntItemId"), 1L, 1);

                    b.Property<bool?>("IsActive")
                        .HasColumnType("bit")
                        .HasColumnName("isActive");

                    b.Property<decimal?>("NumStockQuantity")
                        .HasColumnType("numeric(18,2)")
                        .HasColumnName("numStockQuantity");

                    b.Property<string>("StrItemName")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .HasColumnName("strItemName");

                    b.HasKey("IntItemId")
                        .HasName("PK__tblItem__FA6F1B123D9D4BA9");

                    b.ToTable("tblItem");
                });

            modelBuilder.Entity("CreateLinqAndSp.Models.TblPartner", b =>
                {
                    b.Property<int>("IntPartnerId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("intPartnerId");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("IntPartnerId"), 1L, 1);

                    b.Property<int?>("IntPartnerTypeId")
                        .HasColumnType("int")
                        .HasColumnName("intPartnerTypeId");

                    b.Property<bool?>("IsActive")
                        .HasColumnType("bit")
                        .HasColumnName("isActive");

                    b.Property<string>("StrPartnerName")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .HasColumnName("strPartnerName");

                    b.HasKey("IntPartnerId")
                        .HasName("PK__tblPartn__279F3038FA8FC6F3");

                    b.ToTable("tblPartner");
                });

            modelBuilder.Entity("CreateLinqAndSp.Models.TblPartnerType", b =>
                {
                    b.Property<int>("IntPartnerTypeId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("intPartnerTypeId");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("IntPartnerTypeId"), 1L, 1);

                    b.Property<bool?>("IsActive")
                        .HasColumnType("bit")
                        .HasColumnName("isActive");

                    b.Property<string>("StrPartnerTypeName")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .HasColumnName("strPartnerTypeName");

                    b.HasKey("IntPartnerTypeId")
                        .HasName("PK__tblPartn__353019536A6E1DCE");

                    b.ToTable("tblPartnerType");
                });

            modelBuilder.Entity("CreateLinqAndSp.Models.TblPurchase", b =>
                {
                    b.Property<int>("IntPurchaseId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("intPurchaseId");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("IntPurchaseId"), 1L, 1);

                    b.Property<DateTime?>("DtePurchaseDate")
                        .HasColumnType("datetime")
                        .HasColumnName("dtePurchaseDate");

                    b.Property<int?>("IntSupplierId")
                        .HasColumnType("int")
                        .HasColumnName("intSupplierId");

                    b.Property<bool?>("IsActive")
                        .HasColumnType("bit")
                        .HasColumnName("isActive");

                    b.HasKey("IntPurchaseId")
                        .HasName("PK__tblPurch__39AFE6058A3D2FAE");

                    b.ToTable("tblPurchase");
                });

            modelBuilder.Entity("CreateLinqAndSp.Models.TblPurchaseDetail", b =>
                {
                    b.Property<int>("IntDetailsId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("intDetailsId");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("IntDetailsId"), 1L, 1);

                    b.Property<int?>("IntItemId")
                        .HasColumnType("int")
                        .HasColumnName("intItemId");

                    b.Property<int?>("IntPurchaseId")
                        .HasColumnType("int")
                        .HasColumnName("intPurchaseId");

                    b.Property<bool?>("IsActive")
                        .HasColumnType("bit")
                        .HasColumnName("isActive");

                    b.Property<decimal?>("NumItemQuantity")
                        .HasColumnType("numeric(18,2)")
                        .HasColumnName("numItemQuantity");

                    b.Property<decimal?>("NumUnitPrice")
                        .HasColumnType("numeric(18,2)")
                        .HasColumnName("numUnitPrice");

                    b.HasKey("IntDetailsId")
                        .HasName("PK__tblPurch__0A1B5AF362E52B46");

                    b.ToTable("tblPurchaseDetails");
                });

            modelBuilder.Entity("CreateLinqAndSp.Models.TblSale", b =>
                {
                    b.Property<int>("IntSalesId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("intSalesId");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("IntSalesId"), 1L, 1);

                    b.Property<DateTime?>("DteSalesDate")
                        .HasColumnType("datetime")
                        .HasColumnName("dteSalesDate");

                    b.Property<int?>("IntCustomerId")
                        .HasColumnType("int")
                        .HasColumnName("intCustomerId");

                    b.Property<bool?>("IsActive")
                        .HasColumnType("bit")
                        .HasColumnName("isActive");

                    b.HasKey("IntSalesId")
                        .HasName("PK__tblSales__754F6C55A85CC1C6");

                    b.ToTable("tblSales");
                });

            modelBuilder.Entity("CreateLinqAndSp.Models.TblSalesDetail", b =>
                {
                    b.Property<int>("IntDetailsId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("intDetailsId");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("IntDetailsId"), 1L, 1);

                    b.Property<int?>("IntItemId")
                        .HasColumnType("int")
                        .HasColumnName("intItemId");

                    b.Property<int?>("IntSalesId")
                        .HasColumnType("int")
                        .HasColumnName("intSalesId");

                    b.Property<bool?>("IsActive")
                        .HasColumnType("bit")
                        .HasColumnName("isActive");

                    b.Property<decimal?>("NumItemQuantity")
                        .HasColumnType("numeric(18,2)")
                        .HasColumnName("numItemQuantity");

                    b.Property<decimal?>("NumUnitPrice")
                        .HasColumnType("numeric(18,2)")
                        .HasColumnName("numUnitPrice");

                    b.HasKey("IntDetailsId")
                        .HasName("PK__tblSales__0A1B5AF32251E7AD");

                    b.ToTable("tblSalesDetails");
                });
#pragma warning restore 612, 618
        }
    }
}
